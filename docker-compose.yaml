version: '3.5'

services:
  postgres:
    container_name: postgres
    image: postgres:14-alpine
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - pgdata:/var/lib/postgresql/data
    restart: unless-stopped
    ports:
      - "${POSTGRES_PORT}:${POSTGRES_PORT}"
    networks:
      - global-network

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD}
    volumes:
      - pgadmin:/var/lib/pgadmin
    restart: unless-stopped
    ports:
      - "5050:80"
    networks:
      - global-network

  strapi:
    container_name: strapi
    restart: unless-stopped
    build:
      context: ./cms
      dockerfile: Dockerfile
      args:
        NODE_ENV: production
        HOST: ${STRAPI_HOST}
        PORT: ${STRAPI_PORT}
        APP_PORT: ${APP_PORT}
        APP_KEYS: ${STRAPI_APP_KEYS}
        APP_HOST: ${APP_HOST}
    depends_on:
      - postgres
    environment:
      - DATABASE_CLIENT=postgres
      - DATABASE_HOST=postgres
      - DATABASE_PORT=${POSTGRES_PORT}
      - DATABASE_NAME=${POSTGRES_DB}
      - DATABASE_USERNAME=${POSTGRES_USER}
      - DATABASE_PASSWORD=${POSTGRES_PASSWORD}
      - DATABASE_SSL=false
      - API_TOKEN_SALT=${STRAPI_API_TOKEN_SALT}
      - ADMIN_JWT_SECRET=${STRAPI_ADMIN_JWT_SECRET}
      - JWT_SECRET=${STRAPI_JWT_SECRET}
      - INIT_ADMIN=true
      - INIT_ADMIN_USERNAME=${STRAPI_ADMIN_USERNAME}
      - INIT_ADMIN_FIRSTNAME=${STRAPI_ADMIN_FIRSTNAME}
      - INIT_ADMIN_LASTNAME=${STRAPI_ADMIN_LASTNAME}
      - INIT_ADMIN_EMAIL=${STRAPI_ADMIN_EMAIL}
      - INIT_ADMIN_PASSWORD=${STRAPI_ADMIN_PASSWORD}
    volumes:
      - ./cms/config:/opt/app/config
      - ./cms/src:/opt/app/src
      - ./cms/package.json:/opt/package.json
      - ./cms/.env:/opt/app/.env
      - ./cms/public/uploads:/opt/app/public/uploads
    networks:
      - global-network

  nginx:
    container_name: nginx
    depends_on:
      - strapi
      - client
    restart: always
    build: ./nginx
    ports:
      - "${APP_PORT}:80"
    networks:
      - global-network

  client:
    container_name: client
    stdin_open: true
    build:
      context: ./client
      dockerfile: Dockerfile
      args:
        STRAPI_PORT: ${STRAPI_PORT}
        APP_HOST: ${APP_HOST}
        APP_PORT: ${APP_PORT}
    environment:
      - STRAPI_PORT=${STRAPI_PORT}
      - APP_HOST=${APP_HOST}
      - APP_PORT=${APP_PORT}
    depends_on:
      - strapi
    networks:
      - global-network


volumes:
  pgdata:
  pgadmin:

networks:
  global-network:
    name: Global
    driver: bridge