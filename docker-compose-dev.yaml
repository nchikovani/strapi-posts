version: '3.5'

services:
  postgres:
    container_name: postgres
    image: postgres:14-alpine
    environment:
      POSTGRES_PASSWORD: root
      POSTGRES_USER: admin
      POSTGRES_DB: mydb
    volumes:
      - pgdata:/var/lib/postgresql/data
    restart: unless-stopped
    ports:
      - "5432:5432"

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: noemail@noemail.com
      PGADMIN_DEFAULT_PASSWORD: root
    volumes:
      - pgadmin:/var/lib/pgadmin
    restart: unless-stopped
    ports:
      - "5050:80"

  strapi:
    container_name: strapi
    restart: unless-stopped
    build:
      context: ./cms
      dockerfile: Dockerfile

    depends_on:
      - postgres
    ports:
      - "1337:1337"
    environment:
      - DATABASE_CLIENT=postgres
      - DATABASE_HOST=postgres
      - DATABASE_PORT=5432
      - DATABASE_NAME=mydb
      - DATABASE_USERNAME=admin
      - DATABASE_PASSWORD=root
      - DATABASE_SSL=false
    volumes:
      - /cms/scrapi/public/uploads:/opt/app/public/uploads
      - /cms/scrapi/public:/opt/app/public
    networks:
      - app-network

  nginx:
    container_name: nginx
    depends_on:
      - api
      - client
    restart: always
    build: ./nginx
    ports:
      - "3050:80"

  api:
    container_name: api
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    volumes:
      - /app/node_modules
      - ./backend:/app
    environment:
      - PGUSER=admin
      - PGHOST=postgres
      - PGDATABASE=mydb
      - PGPASSWORD=root
      - PGPORT=5432
      - CHOKIDAR_USEPOLLING=true

  client:
    container_name: client
    stdin_open: true
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    environment:
      - CHOKIDAR_USEPOLLING=true
    volumes:
      - /app/node_modules
      - ./frontend:/app
    ports:
      - "3000:3000"


volumes:
  pgdata:
  pgadmin:

networks:
  app-network:
    driver: bridge
